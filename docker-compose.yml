services:
  kong:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
      args:
        - KONG_PROXY_PORT=${KONG_PROXY_PORT}
        - KONG_ADMIN_PORT=${KONG_ADMIN_PORT}
    restart: unless-stopped
    container_name: kong
    ports:
      - "${KONG_PROXY_PORT}:${KONG_PROXY_PORT}"
      - "${KONG_ADMIN_PORT}:${KONG_ADMIN_PORT}"
    environment:
      KONG_DATABASE: off
      KONG_PROXY_LISTEN: "${KONG_PROXY_HOST}:${KONG_PROXY_PORT}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_HOST}:${KONG_ADMIN_PORT}"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
    volumes:
      - ./api-gateway/config/kong.yml:/etc/kong/kong.yml
      - ./.env:/app/.env
    networks:
      - services_network
    depends_on:
      - user-service
      - provider-service
      - bill-service

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-multiple-databases.sql:/docker-entrypoint-initdb.d/init-multiple-databases.sql
    networks:
      - services_network

  user-service:
    build:
      context: ./services/user-service
      dockerfile: dockerfile
      args:
        - SERVER_PORT=${USER_SERVER_PORT}
    container_name: user
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=user_db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./.env:/app/.env
    command: ["go", "run", "./cmd/http/main.go"]
    depends_on:
      - postgres
    networks:
      - services_network

  provider-service:
    build:
      context: ./services/provider-service
      dockerfile: dockerfile
      args:
        - SERVER_PORT=${PROVIDER_SERVER_PORT}
    container_name: provider
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=provider_db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./.env:/app/.env
    command: ["go", "run", "./cmd/http/main.go"]
    depends_on:
      - postgres
    networks:
      - services_network

  bill-service:
    build:
      context: ./services/bill-service
      dockerfile: dockerfile
      args:
        - SERVER_PORT=${BILL_SERVER_PORT}
    container_name: bill
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=bill_db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./.env:/app/.env
    command: ["go", "run", "./cmd/http/main.go"]
    depends_on:
      - postgres
    networks:
      - services_network

networks:
  services_network:
    name: services_network
    driver: bridge

volumes:
  postgres-data:
