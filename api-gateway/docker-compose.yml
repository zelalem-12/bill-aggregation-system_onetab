services:
  kong:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - KONG_PROXY_PORT=${KONG_PROXY_PORT}  
        - KONG_ADMIN_PORT=${KONG_ADMIN_PORT}
    container_name: kong
    restart: unless-stopped
    ports:
      - "${KONG_PROXY_PORT}:${KONG_PROXY_PORT}"
      - "${KONG_ADMIN_PORT}:${KONG_ADMIN_PORT}"
    environment:
      KONG_PROXY_HOST: ${KONG_PROXY_HOST}  
      KONG_ADMIN_HOST: ${KONG_ADMIN_HOST}
      KONG_PROXY_PORT: ${KONG_PROXY_PORT}
      KONG_ADMIN_PORT: ${KONG_ADMIN_PORT}
      KONG_PG_HOST: ${POSTGRES_HOST}  
      KONG_PG_PORT: ${POSTGRES_PORT}  
      KONG_PG_USER: ${POSTGRES_USER}  
      KONG_PG_PASSWORD: ${POSTGRES_PASSWORD}  
      KONG_PG_DATABASE: ${POSTGRES_DATABASE}  
    depends_on:
      - kong-migrations
    networks:
      - kong-net

  kong-migrations:
    image: kong:latest
    container_name: kong-migrations
    restart: unless-stopped
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: ${POSTGRES_HOST}  
      KONG_PG_USER: ${POSTGRES_USER}  
      KONG_PG_PASSWORD: ${POSTGRES_PASSWORD}  
      KONG_PG_DATABASE: ${POSTGRES_DATABASE}  
    depends_on:
      - kong-db
    networks:
      - kong-net

  kong-db:
    image: postgres:14-alpine
    container_name: kong-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  
      POSTGRES_DB: ${POSTGRES_DATABASE}  
    volumes:
      - kong-db-data:/var/lib/postgresql/data
    networks:
      - kong-net

networks:
  kong-net:
    driver: bridge

volumes:
  kong-db-data:
